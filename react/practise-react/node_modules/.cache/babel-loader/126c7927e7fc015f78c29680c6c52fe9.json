{"ast":null,"code":"var _jsxFileName = \"/Users/amulyagowda/Documents/practice/react/practise-react/src/component/useRef/UseCallbackComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseCallbackComponent = () => {\n  _s();\n\n  let [number, setNumber] = useState(1);\n  let [dark, setDark] = useState(false);\n\n  let getItems = () => {\n    return [number, number + 1, number + 2];\n  };\n\n  let theme = {\n    backgroundColor: dark ? \"black\" : \"white\",\n    color: dark ? \"white\" : \"black\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: number,\n      onChange: e => setNumber(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDark(prevDark => !prevDark),\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"child\", {\n      getItems: getItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseCallbackComponent, \"cwajPjaIRodakLu7R0wLIQMUL7U=\");\n\n_c = UseCallbackComponent;\n\nconst Child = _ref => {\n  let {\n    getItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Child;\nexport default UseCallbackComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UseCallbackComponent\");\n$RefreshReg$(_c2, \"Child\");","map":{"version":3,"sources":["/Users/amulyagowda/Documents/practice/react/practise-react/src/component/useRef/UseCallbackComponent.jsx"],"names":["useCallback","useState","UseCallbackComponent","number","setNumber","dark","setDark","getItems","theme","backgroundColor","color","e","parseInt","target","value","prevDark","Child"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAA9B;;AAEA,MAAIM,QAAQ,GAAG,MAAM;AACjB,WAAO,CAACJ,MAAD,EAASA,MAAM,GAAC,CAAhB,EAAmBA,MAAM,GAAC,CAA1B,CAAP;AACH,GAFD;;AAIA,MAAIK,KAAK,GAAG;AACRC,IAAAA,eAAe,EAAEJ,IAAI,GAAG,OAAH,GAAa,OAD1B;AAERK,IAAAA,KAAK,EAAEL,IAAI,GAAG,OAAH,GAAa;AAFhB,GAAZ;AAIA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEF,MAA1B;AAAkC,MAAA,QAAQ,EAAKQ,CAAD,IAAOP,SAAS,CAACQ,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMR,OAAO,CAACS,QAAQ,IAAI,CAACA,QAAd,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,QAAQ,EAAGR;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAnBD;;GAAML,oB;;KAAAA,oB;;AAsBN,MAAMc,KAAK,GAAG,QAAgB;AAAA,MAAf;AAACT,IAAAA;AAAD,GAAe;AAC1B,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;MAAMS,K;AAMN,eAAed,oBAAf","sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst UseCallbackComponent = () => {\n    let [number, setNumber] = useState(1)\n    let [dark, setDark] = useState(false)\n\n    let getItems = () => {\n        return [number, number+1, number+2]\n    }\n\n    let theme = {\n        backgroundColor: dark ? \"black\" : \"white\",\n        color: dark ? \"white\" : \"black\"\n    }\n    return(\n        <div>\n            <input type='text' value={number} onChange = {(e) => setNumber(parseInt(e.target.value))}/>\n            <button onClick={() => setDark(prevDark => !prevDark)}>Toggle Theme</button>\n            <child getItems= {getItems}/>\n        </div>\n    )\n}\n\n\nconst Child = ({getItems}) => {\n    return (\n        <div></div>\n    )\n}\n\nexport default UseCallbackComponent"]},"metadata":{},"sourceType":"module"}