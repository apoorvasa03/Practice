{"ast":null,"code":"var _jsxFileName = \"/Users/amulyagowda/Documents/practice/react/practise-react/src/component/useReducer/TodoReducer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(todos, action) {\n  switch (action.type) {\n    case ACTIONS.ADD_TODO:\n      return [...todos, newTodo(action)];\n\n    case ACTIONS.TOGGLE_TODO:\n      return todos.map(todo => {\n        if (todo.id === action.payload.todo.id) {\n          todo.isComplete = !todo.isComplete;\n        }\n      });\n\n    default:\n      return todos;\n  }\n}\n\nconst newTodo = action => {\n  return {\n    id: Date().now,\n    name: action.payload.name,\n    isComplete: false\n  };\n};\n\nconst ACTIONS = {\n  ADD_TODO: 'add-todo',\n  TOGGLE_TODO: 'toggle-todo'\n};\n\nconst TodoReducer = () => {\n  _s();\n\n  let [name, setName] = useState('');\n  let [todos, dispatch] = useReducer(reducer, []);\n\n  const handleSumbit = () => {\n    dispatch({\n      type: ACTIONS.ADD_TODO,\n      payload: {\n        name: name\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSumbit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoReducer, \"u60YCa2HGoWMMsGhxVK2Y9+rg98=\");\n\n_c = TodoReducer;\nexport default TodoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"sources":["/Users/amulyagowda/Documents/practice/react/practise-react/src/component/useReducer/TodoReducer.jsx"],"names":["useReducer","useState","Todo","reducer","todos","action","type","ACTIONS","ADD_TODO","newTodo","TOGGLE_TODO","map","todo","id","payload","isComplete","Date","now","name","TodoReducer","setName","dispatch","handleSumbit","e","target","value"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC3B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,OAAO,CAACC,QAAb;AACI,aAAO,CAAC,GAAGJ,KAAJ,EAAWK,OAAO,CAACJ,MAAD,CAAlB,CAAP;;AACJ,SAAKE,OAAO,CAACG,WAAb;AACI,aAAON,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI;AACrB,YAAGA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACS,OAAP,CAAeF,IAAf,CAAoBC,EAAnC,EAAuC;AACnCD,UAAAA,IAAI,CAACG,UAAL,GAAkB,CAACH,IAAI,CAACG,UAAxB;AACH;AACJ,OAJM,CAAP;;AAKJ;AACI,aAAOX,KAAP;AAVR;AAYH;;AAED,MAAMK,OAAO,GAAIJ,MAAD,IAAY;AACxB,SAAO;AAACQ,IAAAA,EAAE,EAAEG,IAAI,GAAGC,GAAZ;AAAiBC,IAAAA,IAAI,EAAEb,MAAM,CAACS,OAAP,CAAeI,IAAtC;AAA4CH,IAAAA,UAAU,EAAE;AAAxD,GAAP;AACH,CAFD;;AAGA,MAAMR,OAAO,GAAG;AACZC,EAAAA,QAAQ,EAAE,UADE;AAEZE,EAAAA,WAAW,EAAE;AAFD,CAAhB;;AAKA,MAAMS,WAAW,GAAG,MAAM;AAAA;;AACtB,MAAI,CAACD,IAAD,EAAOE,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACG,KAAD,EAAQiB,QAAR,IAAoBrB,UAAU,CAACG,OAAD,EAAU,EAAV,CAAlC;;AAEA,QAAMmB,YAAY,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAAC;AAACf,MAAAA,IAAI,EAAEC,OAAO,CAACC,QAAf;AAAyBM,MAAAA,OAAO,EAAE;AAACI,QAAAA,IAAI,EAAEA;AAAP;AAAlC,KAAD,CAAR;AACH,GAFD;;AAGA,sBACI;AAAA,4BACG;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEJ,IAA1B;AAAgC,QAAA,QAAQ,EAAGK,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,EAIIrB,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;AAAqB,MAAA,IAAI,EAAEA;AAA3B,OAAYA,IAAI,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,YADH,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlBD;;GAAMM,W;;KAAAA,W;AAoBN,eAAeA,WAAf","sourcesContent":["import { useReducer, useState } from \"react\"\nimport Todo from './Todo'\nfunction reducer(todos, action){\n    switch(action.type){\n        case ACTIONS.ADD_TODO:\n            return [...todos, newTodo(action)]\n        case ACTIONS.TOGGLE_TODO:\n            return todos.map(todo => {\n                if(todo.id === action.payload.todo.id) {\n                    todo.isComplete = !todo.isComplete\n                }\n            })  \n        default:\n            return todos\n    }\n}\n\nconst newTodo = (action) => {\n    return {id: Date().now, name: action.payload.name, isComplete: false}\n}\nconst ACTIONS = {\n    ADD_TODO: 'add-todo',\n    TOGGLE_TODO: 'toggle-todo'\n}\n\nconst TodoReducer = () => {\n    let [name, setName] = useState('')\n    let [todos, dispatch] = useReducer(reducer, [])\n\n    const handleSumbit = () => {\n        dispatch({type: ACTIONS.ADD_TODO, payload: {name: name}})\n    }\n    return (\n        <div>\n           <form onSubmit={handleSumbit}>\n               <input type='text' value={name} onChange={(e) => setName(e.target.value)}/>\n           </form>\n           {todos.map((todo) => (\n               <Todo key ={todo.id} todo={todo}/>\n           ))}\n\n        </div>\n    )\n}\n\nexport default TodoReducer\n\n"]},"metadata":{},"sourceType":"module"}